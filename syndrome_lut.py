# Syndrome Lookup Table
# Format: {syndrome_string: (v_bits_array, weight)}

import numpy as np

SYNDROME_LUT = {
    '000000': (np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 0),
    '110000': (np.array([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 1),
    '010000': (np.array([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 1),
    '100000': (np.array([0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0]), 2),
    '101110': (np.array([0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 1),
    '011110': (np.array([1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 2),
    '111110': (np.array([0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 2),
    '001110': (np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0]), 2),
    '110001': (np.array([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 1),
    '000001': (np.array([1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 2),
    '100001': (np.array([0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 2),
    '010001': (np.array([0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0]), 2),
    '011111': (np.array([0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 1),
    '101111': (np.array([1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 2),
    '001111': (np.array([0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), 2),
    '111111': (np.array([0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0]), 2),
    '100110': (np.array([0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0]), 1),
    '010110': (np.array([0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0]), 2),
    '110110': (np.array([0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0]), 2),
    '000110': (np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]), 1),
    '001000': (np.array([0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0]), 2),
    '111000': (np.array([0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1]), 2),
    '011000': (np.array([0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0]), 2),
    '101000': (np.array([0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]), 2),
    '010111': (np.array([0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0]), 2),
    '100111': (np.array([0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]), 2),
    '000111': (np.array([0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0]), 2),
    '110111': (np.array([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]), 2),
    '111001': (np.array([0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0]), 2),
    '001001': (np.array([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0]), 2),
    '101001': (np.array([0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]), 2),
    '011001': (np.array([0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0]), 2),
    '011011': (np.array([0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]), 1),
    '101011': (np.array([0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0]), 2),
    '001011': (np.array([0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]), 2),
    '111011': (np.array([0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0]), 2),
    '110101': (np.array([0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]), 2),
    '000101': (np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0]), 2),
    '100101': (np.array([0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0]), 2),
    '010101': (np.array([0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0]), 2),
    '101010': (np.array([0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0]), 2),
    '011010': (np.array([0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0]), 2),
    '111010': (np.array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0]), 2),
    '001010': (np.array([0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0]), 1),
    '000100': (np.array([0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0]), 2),
    '110100': (np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1]), 2),
    '010100': (np.array([0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1]), 2),
    '100100': (np.array([0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0]), 2),
    '111101': (np.array([0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0]), 2),
    '001101': (np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0]), 1),
    '101101': (np.array([0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0]), 2),
    '011101': (np.array([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0]), 2),
    '010011': (np.array([0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0]), 2),
    '100011': (np.array([0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0]), 2),
    '000011': (np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0]), 1),
    '110011': (np.array([1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0]), 2),
    '001100': (np.array([0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0]), 2),
    '111100': (np.array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]), 1),
    '011100': (np.array([0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0]), 2),
    '101100': (np.array([0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0]), 2),
    '100010': (np.array([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]), 2),
    '010010': (np.array([0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0]), 2),
    '110010': (np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]), 1),
    '000010': (np.array([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]), 2),
}

def get_min_v_for_syndrome(syndrome_key: str):
    """Get minimum-weight v for given syndrome"""
    return SYNDROME_LUT.get(syndrome_key, (None, None))
